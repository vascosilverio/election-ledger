/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package electionledger.electorGUI;

import electionledger.blockchain.Transfer;
import electionledger.node.RemoteInterface;
import electionledger.utils.Credentials;
import electionledger.utils.SecurityUtils;
import java.awt.Color;
import java.nio.charset.StandardCharsets;
import java.rmi.RemoteException;
import java.security.PublicKey;
import java.util.Base64;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Rúben Garcia Nº16995, Vasco Silvério Nº22350
 */
public class boletimPanel extends javax.swing.JPanel {

    Credentials myUser;     //Chaves e CC/nome do utilizador autenticado
    RemoteInterface remote; //Objeto remoto

    public boletimPanel(Credentials MainUser, RemoteInterface MainRemote) {
        initComponents();
        remote = MainRemote;
        myUser = MainUser;
        listCandidates.setModel(new DefaultListModel<>());
        printCandidates();
    }

    /**
     * Imprime a lista de candidatos num componente gráfico.
     */
    public void printCandidates() {
        try {
            DefaultListModel<String> model = new DefaultListModel<>();
            for (Object candidate : remote.getCandidates()) {
                // Converte cada candidato para String antes de adicioná-lo ao modelo
                System.out.println("Candidato: " + candidate.toString());
                model.addElement(String.valueOf(candidate));
            }

            listCandidates.setModel(model);
        } catch (RemoteException ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        confirmarbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConfirmVote = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        listCandidates = new javax.swing.JList<>();
        votarbtn = new javax.swing.JButton();

        confirmarbtn.setText("Confirmar Voto");
        confirmarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarbtnActionPerformed(evt);
            }
        });

        txtConfirmVote.setColumns(20);
        txtConfirmVote.setRows(5);
        txtConfirmVote.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(txtConfirmVote);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(confirmarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        listCandidates.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        listCandidates.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listCandidates.setPreferredSize(new java.awt.Dimension(199, 400));

        votarbtn.setText("Votar");
        votarbtn.setInheritsPopupMenu(true);
        votarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                votarbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(votarbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listCandidates, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE))
                .addContainerGap(829, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(votarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listCandidates, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void votarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_votarbtnActionPerformed
        // TODO add your handling code here:
        try {
            if (remote.checkVote(SecurityUtils.getPublicKey(Base64.getDecoder().decode(myUser.getPubKey())))) {
                byte[] candidate = listCandidates.getSelectedValue().getBytes(StandardCharsets.UTF_8);

                //byte[] pk = Base64.getDecoder().decode(remote.masterPublicKey().getEncoded());
                PublicKey pubKey = remote.masterPublicKey();
                int token = 1;
                Transfer t = new Transfer(
                        myUser.getPubKey(),
                        Base64.getEncoder().encodeToString(SecurityUtils.encrypt(candidate, pubKey)),
                        token,
                        myUser.getPrivKey());
                remote.addTransaction(t.toText());
            } else {
                JOptionPane.showMessageDialog(null, "Já votou.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_votarbtnActionPerformed

    private void confirmarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarbtnActionPerformed
        try {
            if (remote.stateElector(myUser.getPubKey()) == 2) {
                confirmarbtn.setBackground(Color.green);
                txtConfirmVote.setText(remote.confirmElectorVote(SecurityUtils.getPublicKey(Base64.getDecoder().decode(myUser.getPubKey()))));
            } else {
                confirmarbtn.setBackground(Color.red);
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_confirmarbtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmarbtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listCandidates;
    private javax.swing.JTextArea txtConfirmVote;
    private javax.swing.JButton votarbtn;
    // End of variables declaration//GEN-END:variables

}
